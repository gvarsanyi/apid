// Generated by CoffeeScript 1.7.1
var api, callback_id, callbacks,
  __slice = [].slice;

callback_id = 0;

callbacks = {};

module.exports.api = api = {};

module.exports.attach = function(keys, socket, target) {
  var key, _fn, _i, _len;
  if (target == null) {
    target = api;
  }
  _fn = function(key) {
    return target[key] = function() {
      var args, cb, err, msg, _j;
      args = 2 <= arguments.length ? __slice.call(arguments, 0, _j = arguments.length - 1) : (_j = 0, []), cb = arguments[_j++];
      if (typeof cb !== 'function') {
        throw new Error('Callback function is required as last argument');
      }
      callback_id += 1;
      callbacks[callback_id] = cb;
      try {
        msg = {
          req: {
            id: callback_id,
            fn: key
          }
        };
        if (args.length) {
          msg.req.args = JSON.stringify(args);
        }
        return socket.write(msg);
      } catch (_error) {
        err = _error;
        console.error('error requesting:', err);
        if (cb = callbacks[callback_id]) {
          delete callbacks[callback_id];
          return cb(err);
        }
      }
    };
  };
  for (_i = 0, _len = keys.length; _i < _len; _i++) {
    key = keys[_i];
    _fn(key);
  }
};

module.exports.response = function(res) {
  var cb, _ref;
  if (!((res != null ? res.id : void 0) >= 1 && (cb = callbacks[res.id]))) {
    console.error('dropping unparsible response:', res);
  }
  delete callbacks[res.id];
  if ((_ref = res.args) != null ? _ref.length : void 0) {
    return cb.apply(null, JSON.parse(res.args));
  } else {
    return cb();
  }
};
